name: Release - Tag + Docs

on:
  push:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # necessário para criar tag/release
      actions: read

    env:
      # Ajuste o nome da imagem para casar com seu repo no Docker Hub
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/checkpoint3-api

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # precisamos do histórico para changelog

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Read project version from pom.xml
        id: ver
        run: echo "VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:3.5.0:exec)" >> $GITHUB_OUTPUT

      - name: Build JAR (skip tests)
        run: mvn -B -ntp -DskipTests clean package

      - name: Generate Javadoc
        run: mvn -B -ntp -DskipTests javadoc:javadoc

      - name: Zip Javadoc
        run: |
          mkdir -p dist
          (cd target/site && zip -r ../../dist/javadoc-${{ steps.ver.outputs.VERSION }}.zip apidocs)

      - name: Create Git Tag (vX.Y.Z)
        run: |
          TAG="v${{ steps.ver.outputs.VERSION }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG já existe. Pulando criação de tag."
          else
            git tag -a "$TAG" -m "Release $TAG"
            git push origin "$TAG"
          fi

      - name: Generate simple changelog
        id: changelog
        run: |
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "Changes since last tag:" >> $GITHUB_OUTPUT
          git log -10 --pretty=format:'- %s (%h)' >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.ver.outputs.VERSION }}
          name: Release v${{ steps.ver.outputs.VERSION }}
          body: ${{ steps.changelog.outputs.NOTES }}
          files: |
            dist/javadoc-${{ steps.ver.outputs.VERSION }}.zip
